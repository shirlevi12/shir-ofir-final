---
# Nginx Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: 992382545251.dkr.ecr.us-east-1.amazonaws.com/v3/shir-ofir:nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: network
                operator: In
                values:
                - public

---
# Horizontal Pod Autoscaler for Nginx
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
# ConfigMap for nginx.conf (replace with your actual config)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: frontend
data:
  default.conf: |
   server {
    listen 80;

    location /static/ {
        alias /static/;
        access_log off;
    }

    location /media/ {
        alias /media/;
        access_log off;
    }

    location / {
        proxy_pass http://django-service.frontend.svc.cluster.local:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # for CSRF
        proxy_set_header X-CSRFToken $http_x_csrftoken; # forwardd CSRF token
    }
}
